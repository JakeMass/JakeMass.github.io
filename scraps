function noteOn2(noteNumber){
    activeNotes.push(noteNumber);
    osc.frequency.cancelScheduledValues(0);
    osc.frequency.setTargetAtTime(freqFromNoteNumber(noteNumber), 0, portamento);
    oscGain.gain.cancelScheduledValues(0);
    oscGain.gain.setTargetAtTime(0.3, 0, 0.05);
}

function noteOff2(noteNumber){
    var position = activeNotes.indexOf(noteNumber);

    if(position != -1){
        activeNotes.splice(position, 1);
    }

    if(activeNotes.length == 0){
        oscGain.gain.cancelScheduledValues(0);
        oscGain.gain.setTargetAtTime(0, 0, 0.05);
    } else {
        osc.frequency.cancelScheduledValues(0);
        osc.frequency.setTargetAtTime(freqFromNoteNumber(activeNotes[activeNotes.length - 1]), 0, portamento);
    }
}

var request = new XMLHttpRequest();
            request.open('GET', "IRs/" + filename, true);
            request.responseType = "arraybuffer";
            var returnBuffer = null;

            request.onload = function(){
                context.decodeAudioData(request.response, function(buffer){
                    returnBuffer = buffer;
                });
            }

            request.send();

            return returnBuffer;